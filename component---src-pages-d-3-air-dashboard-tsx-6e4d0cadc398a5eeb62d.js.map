{"version":3,"sources":["webpack:///./src/pages/d3.airDashboard.tsx","webpack:///./node_modules/d3-shape/src/curve/natural.js"],"names":["TempDashboard","mergedWeatherData","useState","canvas","setCanvas","ElementResize","id","width","useEffect","select","selectAll","remove","scaffoldCanvas","populateGraph","containerDiv","window","document","getElementById","clientWidth","height","clientHeight","svg","append","attr","x","defaultCanvas","left","right","y","top","bottom","node","data","DateArr","map","d","datetime","air_temperature_at_2m_above_ground_level","filter","removeUndefined","range","extent","scaleTime","domain","tempArr","undefined","tempRange","lowestTemp","highestTemp","scaleLinear","_line","line","curve","curveNatural","enter","t","a","console","log","style","call","axisBottom","axisLeft","ticks","Math","min","round","floor","text","className","minHeight","textAlign","borderBottom","padding","Natural","context","this","_context","controlPoints","i","m","n","length","Array","b","r","prototype","areaStart","areaEnd","NaN","lineStart","_x","_y","lineEnd","lineTo","moveTo","px","py","i0","i1","bezierCurveTo","closePath","point","push"],"mappings":"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","file":"component---src-pages-d-3-air-dashboard-tsx-6e4d0cadc398a5eeb62d.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { select } from \"d3-selection\";\nimport { timeFormat } from \"d3-time-format\";\nimport {\n  timeSecond,\n  timeMinute,\n  timeHour,\n  timeDay,\n  timeMonth,\n  timeWeek,\n  timeYear,\n} from \"d3-time\";\nimport { extent } from \"d3-array\";\nimport { scaleTime, scaleLinear } from \"d3-scale\";\nimport { line, curveNatural } from \"d3-shape\";\nimport { axisBottom, axisLeft } from \"d3-axis\";\nimport { MergedWeatherDataType, removeUndefined } from \"../api/weatherData\";\nimport { CanvasType, defaultCanvas } from \"../utils/canvas\";\nimport { ElementResize } from \"../components/elementResize\";\n\nconst graphDiv = \".graph-canvas\";\n\nfunction TempDashboard({\n  mergedWeatherData,\n}: {\n  mergedWeatherData: MergedWeatherDataType[] | undefined;\n}) {\n  const [canvas, setCanvas] = useState<CanvasType>();\n  const target = { id: \"graph-canvas-weather\" };\n  const [width, height] = ElementResize(target);\n\n  const clearGraph = () => {\n    select(graphDiv).selectAll(\"*\").remove();\n  };\n\n  useEffect(() => {\n    clearGraph();\n    const canvas = scaffoldCanvas();\n    if (canvas) {\n      setCanvas(canvas);\n    }\n  }, [mergedWeatherData, width]);\n\n  useEffect(() => {\n    populateGraph();\n  }, [canvas]);\n\n  const scaffoldCanvas = (): CanvasType | undefined => {\n    const containerDiv = window.document.getElementById(\"graph-canvas-weather\");\n    if (containerDiv && mergedWeatherData) {\n      const width = containerDiv?.clientWidth ?? 0;\n      const height = containerDiv?.clientHeight ?? 0;\n      const svg = select(graphDiv)\n        .append(\"svg\")\n        .attr(\"height\", height)\n        .attr(\"width\", width);\n      const x = width - (defaultCanvas.left + defaultCanvas.right);\n      const y = height - (defaultCanvas.top + defaultCanvas.bottom);\n      const node = svg\n        .append(\"g\")\n        .attr(\n          \"transform\",\n          \"translate(\" + defaultCanvas.left + \",\" + defaultCanvas.top + \")\"\n        );\n      // const dataset: {\n      //   key: string;\n      //   values: any;\n      //   value: undefined;\n      // }[] = nest<MergedWeatherDataType>()\n      //   .key(function () {\n      //     return \"Temperature\";\n      //   })\n      //   .rollup((d: MergedWeatherDataType[]) => {\n      //     console.log(d);\n      //     debugger;\n      //     return d[0] as MergedWeatherDataType;\n      //   })\n      //   .entries(mergedWeatherData);\n      return {\n        x,\n        y,\n        node,\n        // dataset,\n      };\n    }\n    return undefined;\n  };\n\n  const populateGraph = () => {\n    if (mergedWeatherData && canvas) {\n      const data = mergedWeatherData;\n\n      /** Time on x axis */\n      const DateArr = data\n        .map((d) => {\n          if (d.datetime && d.air_temperature_at_2m_above_ground_level) {\n            return d.datetime;\n          }\n          return undefined;\n        })\n        .filter(removeUndefined);\n      const range = extent(DateArr) as [Date, Date];\n      const x = scaleTime().range([0, canvas.x]).domain(range);\n\n      /** Temp on y axis */\n      const tempArr = data\n        .map((d) => d.air_temperature_at_2m_above_ground_level ?? undefined)\n        .filter(removeUndefined);\n      const tempRange = extent(tempArr) as [number, number];\n      const [lowestTemp, highestTemp] = tempRange;\n      const y = scaleLinear()\n        .range([canvas?.y ?? 0, 0])\n        .domain([lowestTemp, highestTemp]);\n\n      const _line = line<MergedWeatherDataType>()\n        .curve(curveNatural)\n        .x(function (d: MergedWeatherDataType) {\n          return x(d.datetime ?? 0);\n        })\n        .y(function (d) {\n          const yAxis = y(d.air_temperature_at_2m_above_ground_level ?? 0);\n          return y(d.air_temperature_at_2m_above_ground_level ?? 0);\n        });\n\n      const lineGraph = canvas.node.append(\"g\");\n\n      canvas.node\n        .append(\"g\")\n        .selectAll(\".location\")\n        .data([mergedWeatherData[0]])\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"location\")\n        .append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", function (d) {\n          const t = _line(\n            mergedWeatherData.filter(\n              (a) => a.air_temperature_at_2m_above_ground_level\n            )\n          );\n          console.log(t);\n          return t;\n        })\n        .style(\"stroke\", function (d) {\n          return \"darkBlue\";\n        })\n        .attr(\"fill\", \"none\");\n\n      canvas?.node\n        .append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .attr(\"transform\", \"translate(0,\" + canvas.y + \")\")\n        .call(axisBottom(x));\n\n      canvas.node\n        .append(\"g\")\n        .attr(\"class\", \"axis y-axis\")\n        .call(\n          axisLeft(y).ticks(\n            Math.min(Math.round(Math.floor(canvas.y / 35) + 1), highestTemp),\n            \".0f\"\n          )\n        )\n        .append(\"text\")\n        .attr(\n          \"transform\",\n          \"rotate(-90) translate(\" +\n            -(canvas.y / 2) +\n            \", \" +\n            -defaultCanvas.left * 0.8 +\n            \")\"\n        )\n        .attr(\"class\", \"label\")\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-weight\", \"normal\")\n        .style(\"font-size\", \"12px\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".35em\")\n        .attr(\"fill\", \"#666\")\n        .text(\"Temp\");\n      canvas.node.selectAll(\".y-axis g text\").attr(\"fill\", \"#666\");\n      canvas.node.selectAll(\".y-axis g line\").attr(\"stroke\", \"#666\");\n\n      const svg = select(\"#my_dataviz-air\");\n\n      // Handmade legend\n      svg\n        .append(\"circle\")\n        .attr(\"cx\", 10)\n        .attr(\"cy\", 10)\n        .attr(\"r\", 6)\n        .style(\"fill\", \"darkBlue\");\n      svg\n        .append(\"text\")\n        .attr(\"x\", 20)\n        .attr(\"y\", 10)\n        .text(\"Air Temp\")\n        .style(\"font-size\", \"15px\")\n        .attr(\"alignment-baseline\", \"middle\");\n    }\n  };\n\n  return (\n    <Container>\n      <div className=\"App\">\n        <div className=\"header\" style={{ minHeight: \"70px\" }}>\n          <h3 className=\"text-muted\">Air Dashboard</h3>\n          <svg id=\"my_dataviz-air\" height=\"30\" width={canvas?.x ?? 405}></svg>\n        </div>\n\n        <div\n          style={{\n            textAlign: \"center\",\n            borderBottom: \"1px solid #e5e5e5\",\n            padding: \"0\",\n            minHeight: \"300px\",\n          }}\n          className=\"jumbotron graph-canvas\"\n          id=\"graph-canvas-weather\"\n        />\n      </div>\n    </Container>\n  );\n}\n\nexport default TempDashboard;\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function lineEnd() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || this._line !== 0 && n === 1) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function point(x, y) {\n    this._x.push(+x);\n\n    this._y.push(+y);\n  }\n}; // See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\n  for (i = 1; i < n - 1; ++i) {\n    a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  }\n\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\n  for (i = 1; i < n; ++i) {\n    m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  }\n\n  a[n - 1] = r[n - 1] / b[n - 1];\n\n  for (i = n - 2; i >= 0; --i) {\n    a[i] = (r[i] - a[i + 1]) / b[i];\n  }\n\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\n  for (i = 0; i < n - 1; ++i) {\n    b[i] = 2 * x[i + 1] - a[i + 1];\n  }\n\n  return [a, b];\n}\n\nexport default function (context) {\n  return new Natural(context);\n}"],"sourceRoot":""}