{"version":3,"sources":["webpack:///./src/pages/d3.waterDashboard.tsx","webpack:///./node_modules/d3-shape/src/curve/natural.js"],"names":["WaterDashboard","mergedWeatherData","targetId","useState","canvas","setCanvas","target","id","ElementResize","width","useEffect","select","selectAll","remove","scaffoldCanvas","populateGraph","containerDiv","window","document","getElementById","clientWidth","height","clientHeight","svg","append","attr","x","defaultCanvas","left","right","y","top","bottom","node","data","DateArr","map","d","datetime","surface_sea_water_speed","filter","removeUndefined","range","extent","scaleTime","domain","windSpeed","windSpeedRange","scaleLinear","_line","line","curve","curveNatural","waterSpeedData","a","enter","t","console","log","style","call","axisBottom","axisLeft","text","className","minHeight","textAlign","borderBottom","padding","replace","Natural","context","this","_context","controlPoints","i","m","n","length","Array","b","r","prototype","areaStart","areaEnd","NaN","lineStart","_x","_y","lineEnd","lineTo","moveTo","px","py","i0","i1","bezierCurveTo","closePath","point","push"],"mappings":"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","file":"component---src-pages-d-3-water-dashboard-tsx-d893bf8f789a5e3e4e2c.js","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport { Container, Form, Checkbox } from \"semantic-ui-react\";\nimport { nest } from \"d3-collection\";\nimport { select } from \"d3-selection\";\nimport { timeParse, timeFormat } from \"d3-time-format\";\nimport {\n  timeSecond,\n  timeMinute,\n  timeHour,\n  timeDay,\n  timeMonth,\n  timeWeek,\n  timeYear,\n} from \"d3-time\";\nimport { max, min, extent } from \"d3-array\";\nimport { scaleOrdinal, scaleTime, scaleLinear } from \"d3-scale\";\nimport { schemeCategory10 } from \"d3-scale-chromatic\";\nimport { line, area, curveNatural, curveStepAfter } from \"d3-shape\";\nimport { axisBottom, axisLeft } from \"d3-axis\";\nimport { MergedWeatherDataType, removeUndefined } from \"../api/weatherData\";\nimport { CanvasType, defaultCanvas } from \"../utils/canvas\";\nimport { ElementResize } from \"../components/elementResize\";\n\nconst wrapperDiv = \".graph-water\";\n\nfunction WaterDashboard({\n  mergedWeatherData,\n}: {\n  mergedWeatherData: MergedWeatherDataType[] | undefined;\n}) {\n  const targetId = \"graph-canvas-water\";\n  const [canvas, setCanvas] = useState<CanvasType>();\n  const target = { id: targetId };\n  const [width, height] = ElementResize(target);\n\n  const clearGraph = () => {\n    select(wrapperDiv).selectAll(\"*\").remove();\n  };\n\n  useEffect(() => {\n    clearGraph();\n    const canvas = scaffoldCanvas();\n    if (canvas) {\n      setCanvas(canvas);\n    }\n  }, [mergedWeatherData, width]);\n\n  useEffect(() => {\n    populateGraph();\n  }, [canvas]);\n\n  const scaffoldCanvas = (): CanvasType | undefined => {\n    const containerDiv = window.document.getElementById(targetId);\n    if (containerDiv && mergedWeatherData) {\n      const width = containerDiv?.clientWidth ?? 0;\n      const height = containerDiv?.clientHeight ?? 0;\n      const svg = select(wrapperDiv)\n        .append(\"svg\")\n        .attr(\"height\", height)\n        .attr(\"width\", width);\n      const x = width - (defaultCanvas.left + defaultCanvas.right);\n      const y = height - (defaultCanvas.top + defaultCanvas.bottom);\n      const node = svg\n        .append(\"g\")\n        .attr(\n          \"transform\",\n          \"translate(\" + defaultCanvas.left + \",\" + defaultCanvas.top + \")\"\n        );\n      return {\n        x,\n        y,\n        node,\n        // dataset,\n      };\n    }\n    return undefined;\n  };\n\n  const populateGraph = () => {\n    if (mergedWeatherData && canvas) {\n      const data = mergedWeatherData;\n\n      /** Time on x axis */\n      const DateArr = data\n        .map((d) => {\n          if (d.datetime && d.surface_sea_water_speed) {\n            return d.datetime;\n          }\n          return undefined;\n        })\n        .filter(removeUndefined);\n      const range = extent(DateArr) as [Date, Date];\n      const x = scaleTime().range([0, canvas.x]).domain(range);\n\n      /** Temp on y axis */\n      const windSpeed = data\n        .map((d) => d.surface_sea_water_speed)\n        .filter(removeUndefined);\n      const windSpeedRange = extent(windSpeed) as [number, number];\n      const y = scaleLinear()\n        .range([canvas?.y ?? 0, 0])\n        .domain(windSpeedRange);\n\n      const _line = line<[Date, number]>()\n        .curve(curveNatural)\n        .x(function (d) {\n          return x(d[0]);\n        })\n        .y(function (d) {\n          const yAxis = y(d[1]);\n          return y(d[1]);\n        });\n\n      const lineGraph = canvas.node.append(\"g\");\n\n      const waterSpeedData = mergedWeatherData\n        .filter((a) => a.surface_sea_water_speed)\n        .map(\n          (a) => [a.datetime!, a.surface_sea_water_speed!] as [Date, number]\n        );\n\n      canvas.node\n        .append(\"g\")\n        .selectAll(\".location\")\n        .data([waterSpeedData])\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"location\")\n        .append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", function (d) {\n          const t = _line(d);\n          console.log(t);\n          return t;\n        })\n        .style(\"stroke\", function (d) {\n          return \"darkBlue\";\n        })\n        .attr(\"fill\", \"none\");\n\n      canvas?.node\n        .append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .attr(\"transform\", \"translate(0,\" + canvas.y + \")\")\n        .call(axisBottom(x));\n\n      canvas.node\n        .append(\"g\")\n        .attr(\"class\", \"axis y-axis\")\n        .call(axisLeft(y))\n        .append(\"text\")\n        .attr(\n          \"transform\",\n          \"rotate(-90) translate(\" +\n            -(canvas.y / 2) +\n            \", \" +\n            -defaultCanvas.left +\n            \")\"\n        )\n        .attr(\"class\", \"label\")\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-weight\", \"normal\")\n        .style(\"font-size\", \"12px\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".35em\")\n        .attr(\"fill\", \"#666\")\n        .text(\"Water Speed\");\n      canvas.node.selectAll(\".y-axis g text\").attr(\"fill\", \"#666\");\n      canvas.node.selectAll(\".y-axis g line\").attr(\"stroke\", \"#666\");\n\n      const svg = select(\"#my_dataviz-water\");\n\n      // Handmade legend\n      svg\n        .append(\"circle\")\n        .attr(\"cx\", 10)\n        .attr(\"cy\", 10)\n        .attr(\"r\", 6)\n        .style(\"fill\", \"darkBlue\");\n      svg\n        .append(\"text\")\n        .attr(\"x\", 20)\n        .attr(\"y\", 10)\n        .text(\"Water Speed\")\n        .style(\"font-size\", \"15px\")\n        .attr(\"alignment-baseline\", \"middle\");\n    }\n  };\n\n  return (\n    <Container>\n      <div className=\"App\">\n        <div className=\"header\" style={{ minHeight: \"70px\" }}>\n          <h3 className=\"text-muted\">Water Dashboard</h3>\n          <svg id=\"my_dataviz-water\" height=\"30\" width={canvas?.x ?? 405}></svg>\n        </div>\n\n        <div\n          style={{\n            textAlign: \"center\",\n            borderBottom: \"1px solid #e5e5e5\",\n            padding: \"0\",\n            minHeight: \"300px\",\n          }}\n          className={`jumbotron ${wrapperDiv.replace(\".\", \"\")}`}\n          id={targetId}\n        />\n      </div>\n    </Container>\n  );\n}\n\nexport default WaterDashboard;\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function lineEnd() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || this._line !== 0 && n === 1) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function point(x, y) {\n    this._x.push(+x);\n\n    this._y.push(+y);\n  }\n}; // See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\n  for (i = 1; i < n - 1; ++i) {\n    a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  }\n\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\n  for (i = 1; i < n; ++i) {\n    m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  }\n\n  a[n - 1] = r[n - 1] / b[n - 1];\n\n  for (i = n - 2; i >= 0; --i) {\n    a[i] = (r[i] - a[i + 1]) / b[i];\n  }\n\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\n  for (i = 0; i < n - 1; ++i) {\n    b[i] = 2 * x[i + 1] - a[i + 1];\n  }\n\n  return [a, b];\n}\n\nexport default function (context) {\n  return new Natural(context);\n}"],"sourceRoot":""}